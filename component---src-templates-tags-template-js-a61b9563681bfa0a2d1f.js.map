{"version":3,"sources":["webpack://gatsby-starter-glass/./src/components/post-list.js","webpack://gatsby-starter-glass/./src/components/styled-link.js","webpack://gatsby-starter-glass/./src/components/tags.js","webpack://gatsby-starter-glass/./src/templates/tags-template.js"],"names":["PostList","posts","map","frontmatter","fields","excerpt","timeToRead","title","tags","date","description","slug","PostListItem","key","StyledPostList","StyledPostListItem","isListPage","PostListTitle","Link","to","PostListExcerpt","dangerouslySetInnerHTML","__html","PostListMeta","styled","StyledLink","style","tag","Tag","str","match","x","toLowerCase","join","pageContext","data","allMarkdownRemark","nodes","TagsTemplateWrapper","Title"],"mappings":"6KA2BA,IAtBiB,YAAgB,IACzBA,EADwB,EAAZC,MACKC,KAAI,YAAmD,IAAhDC,EAA+C,EAA/CA,YAAaC,EAAkC,EAAlCA,OAAQC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,WAClDC,EAAmCJ,EAAnCI,MAAOC,EAA4BL,EAA5BK,KAAMC,EAAsBN,EAAtBM,KAAMC,EAAgBP,EAAhBO,YACnBC,EAASP,EAATO,KAER,OACE,gBAACC,EAAD,CACEC,IAAKF,EACLH,KAAMA,EACND,MAAOA,EACPE,KAAMA,EACNE,KAAMA,EACNL,WAAYA,EACZI,YAAaA,EACbL,QAASA,OAKf,OAAO,gBAACS,EAAD,KAAiBd,IAK1B,IAAMY,EAAe,SAAC,GAQf,IAPLL,EAOI,EAPJA,MACAE,EAMI,EANJA,KAEAD,GAII,EALJF,WAKI,EAJJE,MACAH,EAGI,EAHJA,QACAK,EAEI,EAFJA,YACAC,EACI,EADJA,KAEA,OACE,gBAACI,EAAD,KACE,gBAAC,IAAD,CAAMP,KAAMA,EAAMQ,YAAY,IAE9B,gBAACC,EAAD,KACE,gBAAC,EAAAC,KAAD,CAAMC,GAAIR,GAAOJ,IAEnB,gBAACa,EAAD,CACEC,wBAAyB,CACvBC,OAAQZ,GAAeL,KAG3B,gBAACkB,EAAD,KACE,4BAAOd,MAQTK,EAAiBU,mBAAH,iEAAGA,CAAH,yMAedT,EAAqBS,mBAAH,qEAAGA,CAAH,wTAqBlBP,EAAgBO,mBAAH,gEAAGA,CAAH,4OAuBbJ,EAAkBI,kBAAH,kEAAGA,CAAH,gDAKfD,EAAeC,oBAAH,+DAAGA,CAAH,4F,gDCxHZC,GAAaD,E,QAAAA,IAAON,QAAV,8EAAGM,CAAH,4OAahB,O,oECUA,IAfa,SAAC,GAAqB,IAAnBE,EAAkB,EAAlBA,MAAOlB,EAAW,EAAXA,KACrB,OACE,uBAAKkB,MAAOA,GACTlB,GACCA,EAAKN,KAAI,SAAAyB,GACP,OACE,gBAACC,EAAD,CAAKf,IAAKc,GACR,gBAAC,EAAAT,KAAD,CAAMC,GAAE,UAdFU,EAcyBF,EAbpCE,EACJC,MAAM,sEACN5B,KAAI,SAAA6B,GAAC,OAAIA,EAAEC,iBACXC,KAAK,OAU4CN,IAdlC,IAAAE,OAwBpB,IAAMD,EAAMJ,qBAAH,qDAAGA,CAAH,6U,ycCgBT,UArCqB,SAAC,GAA2B,IAAzBU,EAAwB,EAAxBA,YAAaC,EAAW,EAAXA,KAC3BR,EAAQO,EAARP,IAEF1B,EAAQkC,EAAKC,kBAAkBC,MAC/B9B,EAAK,gBAAmBoB,EAE9B,OACE,gBAAC,IAAD,CAAQpB,MAAOA,GACb,gBAAC+B,EAAD,KACE,gBAACC,EAAD,SAASZ,EAAT,WACA,mBAOER,GAAG,SAPL,YAWA,gBAAC,IAAD,CAAUlB,MAAOA,IAEjB,mBAKEkB,GAAG,SALL,WAgBR,IAAMmB,EAAsBd,oBAAH,8EAAGA,CAAH,kCAInBe,EAAQf,mBAAH,gEAAGA,CAAH","file":"component---src-templates-tags-template-js-a61b9563681bfa0a2d1f.js","sourcesContent":["import React from \"react\"\nimport styled from \"styled-components\"\nimport { Link } from \"gatsby\"\nimport Tags from \"./tags\"\n\nconst PostList = ({ posts }) => {\n  const PostList = posts.map(({ frontmatter, fields, excerpt, timeToRead }) => {\n    const { title, tags, date, description } = frontmatter\n    const { slug } = fields\n\n    return (\n      <PostListItem\n        key={slug}\n        tags={tags}\n        title={title}\n        date={date}\n        slug={slug}\n        timeToRead={timeToRead}\n        description={description}\n        excerpt={excerpt}\n      />\n    )\n  })\n\n  return <StyledPostList>{PostList}</StyledPostList>\n}\n\nexport default PostList\n\nconst PostListItem = ({\n  title,\n  date,\n  timeToRead,\n  tags,\n  excerpt,\n  description,\n  slug,\n}) => {\n  return (\n    <StyledPostListItem>\n      <Tags tags={tags} isListPage={false} />\n\n      <PostListTitle>\n        <Link to={slug}>{title}</Link>\n      </PostListTitle>\n      <PostListExcerpt\n        dangerouslySetInnerHTML={{\n          __html: description || excerpt,\n        }}\n      />\n      <PostListMeta>\n        <span>{date}</span>\n\n        {/* <span>{timeToRead} mins</span> */}\n      </PostListMeta>\n    </StyledPostListItem>\n  )\n}\n\nconst StyledPostList = styled.ul`\n  padding: 0;\n  list-style: none;\n  display: grid;\n  justify-items: center;\n  grid-gap: var(--size-600);\n  grid-template-columns: repeat(auto-fit, minmax(35ch, 1fr));\n\n  @media screen and (max-width: 500px) {\n    & {\n      display: block;\n    }\n  }\n`\n\nconst StyledPostListItem = styled.li`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  padding: 1.5rem;\n  border: 1px solid rgba(255, 255, 255, 0.5);\n  background-color: rgba(255, 255, 255, 0.3);\n  backdrop-filter: blur(10px);\n  border-radius: 8px;\n\n  &:hover {\n    background-color: rgba(255, 255, 255, 0.5);\n  }\n\n  @media screen and (max-width: 500px) {\n    & {\n      margin-top: var(--size-600);\n    }\n  }\n`\n\nconst PostListTitle = styled.h2`\n  line-height: 1.2;\n  margin-top: 1rem;\n  margin-bottom: 1rem;\n  text-transform: capitalize;\n  font-size: var(--size-600);\n  font-weight: 700;\n\n  & a {\n    text-decoration: none;\n    color: inherit;\n  }\n\n  & a::after {\n    content: \"\";\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n  }\n`\n\nconst PostListExcerpt = styled.p`\n  margin-top: auto;\n  font-size: var(--size-400);\n`\n\nconst PostListMeta = styled.div`\n  margin-top: 2rem;\n\n  font-size: var(--size-300);\n  display: flex;\n  justify-content: space-between;\n`\n","import { Link } from 'gatsby';\nimport styled from 'styled-components';\n\nconst StyledLink = styled(Link)`\n  padding: 0.5rem;\n  padding-left: 1.5rem;\n  padding-right: 1.5rem;\n  color: inherit;\n  background-color: rgba(255, 255, 255, 0.4);\n  text-decoration: none;\n  border-radius: 0px;\n  border: 1px solid rgba(255, 255, 255, 0.8);\n  text-transform: uppercase;\n  border-radius: 4px;\n`;\n\nexport default StyledLink;\n","import React from \"react\"\nimport styled from \"styled-components\"\nimport { Link } from \"gatsby\"\n\nconst toKebabCase = str => {\n  return str\n    .match(/[A-Z]{2,}(?=[A-Z][a-z]+[0-9]*|\\b)|[A-Z]?[a-z]+[0-9]*|[A-Z]|[0-9]+/g)\n    .map(x => x.toLowerCase())\n    .join(\"-\")\n}\n\nconst Tags = ({ style, tags }) => {\n  return (\n    <div style={style}>\n      {tags &&\n        tags.map(tag => {\n          return (\n            <Tag key={tag}>\n              <Link to={`/tags/${toKebabCase(tag)}`}>{tag}</Link>\n            </Tag>\n          )\n        })}\n    </div>\n  )\n}\n\nexport default Tags\n\nconst Tag = styled.span`\n  margin-right: 0.6rem;\n  margin-bottom: 0.6rem;\n  text-transform: uppercase;\n  font-size: var(--size-300);\n\n  & a {\n    position: relative;\n    z-index: 2;\n    background-color: rgba(255, 255, 255, 0.7);\n    text-decoration: none;\n    color: inherit;\n    padding: 0.2rem 0.6rem;\n    border: 1px solid rgba(255, 255, 255, 1);\n    border-radius: 4px;\n  }\n\n  & a:hover {\n    background-color: rgba(255, 255, 255, 0.9);\n  }\n`\n","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport PostList from \"../components/post-list\"\nimport StyledLink from \"../components/styled-link\"\nimport styled from \"styled-components\"\n\nconst TagsTemplate = ({ pageContext, data }) => {\n  const { tag } = pageContext\n  // const { totalCount } = data.allMarkdownRemark\n  const posts = data.allMarkdownRemark.nodes\n  const title = `Posts tagged ${tag}`\n\n  return (\n    <Layout title={title}>\n      <TagsTemplateWrapper>\n        <Title>\"{tag}\" 검색 결과</Title>\n        <Link\n          css={`\n            margin-top: var(--size-400);\n            display: inline-block;\n            color: inherit;\n            text-transform: uppercase;\n          `}\n          to=\"/tags\"\n        >\n          모든 태그 보기\n        </Link>\n        <PostList posts={posts} />\n\n        <StyledLink\n          css={`\n            margin-top: var(--size-400);\n            display: inline-block;\n          `}\n          to=\"/tags\"\n        >\n          뒤로가기\n        </StyledLink>\n      </TagsTemplateWrapper>\n    </Layout>\n  )\n}\n\nexport default TagsTemplate\n\nconst TagsTemplateWrapper = styled.div`\n  padding-top: var(--size-900);\n`\n\nconst Title = styled.h1`\n  font-size: var(--size-700);\n`\n\nexport const pageQuery = graphql`\n  query($tag: String) {\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: {\n        frontmatter: { tags: { in: [$tag] } }\n        fields: { contentType: { eq: \"posts\" } }\n      }\n    ) {\n      totalCount\n      nodes {\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          description\n          tags\n          title\n        }\n        timeToRead\n        excerpt\n      }\n    }\n  }\n`\n"],"sourceRoot":""}